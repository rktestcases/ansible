---
- hosts: localhost
  connection: local
  gather_facts: True
  vars:
   - vars.yml
  tasks:
  - name: create a vpc
    ec2_vpc_net:
       name: "{{ vpc_name }}"
       cidr_block: "{{ vpccidrblock }}"
       region: "{{ region }}"
       # enable dns support
       dns_support: yes
       # enable dns hostname
       dns_hostname: yes
       tenancy: default
       state: "{{ state }}"
       tags:
         Name: "{{ vpcname }}"
    register: ec2_vpc_net_result

  - name: create a public sudnet
    ec2_vpc_subnet:
     vpc_id: "{{ ec2_vpc_net_result.vpc.id }}" 
     region: "{{ region }}"
     az: "{{ zone }}"  # az is avalibility zone
     state: "{{ state }}"
     cidr: "{{ pubsubnet_cidrblock }}"
     #enable public ip
     map_public: yes
     tags:
       Name: "{{ pubsub_name }}"
    redister: pubsub_results

  - name: create a pvt subnet
    ec2_vpc_subnet:
     vpc_id: "{{ ec2_vpc_net_result.vpc.id }}" 
     region: "{{ region }}"
     az: "{{ zone }}"  # az is avalibility zone
     state: "{{ state }}"
     cidr: "{{ pvtsubnet_cidrblock }}"
     # enable public ip
     map_public: no 
     tags:
       Name: "{{ pvtsubnet_name }}"
    register: pvtsun_results

  - name: create a security group
    ec2_group:
      vpc_id: " {{ vpcname.vpc.id }}"
      region: "{{ region }}"
      state: "{{ state }}"
      name: "{{ security_group_name }}"
      description: "{{ security _group_name }}"
      tags: 
        Name: "{{ security_group }}"
      rules:
      - proto: tcp
        ports:
        - 22
        cidr_ip: "{{ port22cidrBlock }}"
        rule_desc: allow all on port 22
    register: security_group_results

  - name: create a pubroute table
    ec2_vpc_routetable:
        vpc_id: "{{ ec2_vpc_net_result.vpc.id }}" 
        region: "{{ region }}"
        state: "{{ state }}"
        subnets: 
          - "{{ pubsub_name.subnet.id }}"
        routes:
         - dest: 0.0.0.0/0
           gateway_id: "{{ igw.gateway_id }}"
        tags: 
          Name: "{{ pubroutetable }}"
  - name: create pvt sub
    ec2_vpc_routetable:
        vpc_id: "{{ ec2_vpc_net_result.vpc.id }}" 
        region: "{{ region }}"
        state: "{{ state }}"
        subnets:
          - "{{ pvtsubnet_name.subnet.id }}"

  - name: create a internet gateway
    ec2_vpc_igw:
       vpc_id: "{{ vpcname.vpc.id }}"
       state: present

  - name: launching
    ec2:
      key_name: "{{ mykey }}"
      instance_type: "{{ instance_type }}"
      image: "{{ ami }}"
      wait: yes
      count: 1
      vpc_subnet_id: "{{ pubsub_name.subnet.id }}"
      assign_public_ip: yes







